#' Prior distributions
#' 
#' @details
#' 
#' The prior distribution functions are used to set the values of prior parameters.
#'
#' Users can control the values of the parameters, but the distribution (model) itself is fixed. The first log-rate (eta a[t], t=1) and the scale parameters (sigma) are assigned Student's t prior distribution. (The scale parameter, sigma, is constrained to be positive, making it a half-Student's t prior.) For correlated time series, the correlation matrix is assigned the LKJ prior.
#' 
#'
#' ### Parameterizations
#'
#' For details on how any distribution is parameterized, see the Stan Language Functions Reference document: \url{https://mc-stan.org/users/documentation/}.
#'
#' @return An object of class `prior` which will be used internally by **surveil** to set parameters of prior distributions. 
#' 
#' @examples
#'
#' prior <- list()
#' prior$eta_1 <- student_t(df = c(20, 20, 20), location = c(-5, -5, -5), scale = c(3, 3, 3))
#' # By default, all `df = 20`
#' prior$sigma <- student_t(location = c(0,0,0), scale = c(1,1,1))
#' prior$omega <- lkj(2)
#' \dontrun{
#' dfw <- dplyr::filter(msa, grepl("Dallas", MSA))
#' fit <- stan_rw(dfw, time = Year, group = Race, prior = prior)
#' plot(fit)
#' }
#'
#' @name priors
#' @md
#' 
NULL

#'
#' @param df Degrees of freedom, positive numeric value(s)
#' @param location Location parameter
#' @param scale Scale parameter
#' 
#' @rdname priors
#' @export
#' @md
student_t <- function(df = 20, location = 0, scale, variable = NULL) {
    validate_positive_parameter(scale)
    validate_positive_parameter(df)
    out <- list(dist = "student_t", df = df, location = location, scale = scale, variable = variable)
    class(out) <- append("prior", class(out))
    return (out)
}

#'
#' @param eta The shape parameter for the LKJ prior
#' 
#' @details
#'
#' ### LKJ prior
#'
#' The LKJ prior for correlation matrix has a single parameter, eta (eta > 0). If `eta=1`, then you are placing a uniform prior on any K-by-K correlation matrix. For eta > 1, there is a higher probability on the identity matrix, such that as eta increases beyond 1, you are expressing greater scepticism towards large correlations. If 0 < eta < 1, then you will be expressing scepticism towards correlations of zero and favoring non-zero correlations. See Stan documentation: \url{https://mc-stan.org/docs/2_27/functions-reference/lkj-correlation.html}.
#' 
#' @source
#' Stan Development Team. Stan Functions Reference Version 2.27. \url{https://mc-stan.org/docs/2_27/functions-reference/lkj-correlation.html}
#' @rdname priors
#' @export
#' @md
lkj <- function(eta) {
    validate_positive_parameter(eta)
    out <- list(dist = "lkj", eta = eta, variable = "Omega")
    class(out) <- append("prior", class(out))
    return (out)
}

#' @export
#' @noRd
#' @param x a prior distribution object
#' @param digits number of digits to print
#' @param ... additional arguments passed to \code{\link[base]{print.data.frame}}
#' @method print prior
print.prior <- function(x, digits = 2, ...) {
    nm <- x$dist
    message("Distribution: ", nm)
    if (nm == "student_t") df <- as.data.frame(x[c('df', 'location', 'scale')])
    if (nm == "lkj") df <- data.frame(eta = x$eta)
    print(df, digits = digits, ...)           
}

#' @noRd
#' @param x The value to check.
#' @return Either an error is thrown or \code{TRUE} is returned invisibly.
validate_positive_parameter <- function(x) {
  nm <- deparse(substitute(x))
  if (!is.null(x)) {
    if (!is.numeric(x)) 
      stop(nm, " should be numeric", call. = FALSE)
    if (any(x <= 0)) 
      stop(nm, " should be positive", call. = FALSE)
  }
  invisible(TRUE)
}

