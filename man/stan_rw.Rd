% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stan_rw.R
\name{stan_rw}
\alias{stan_rw}
\title{Time series models for mortality or disease incidence data}
\usage{
stan_rw(
  data,
  group,
  time,
  cor = FALSE,
  prior = list(),
  chains = 4,
  cores = 1,
  iter = 3000,
  refresh = 1500,
  control = list(adapt_delta = 0.975),
  ...
)
}
\arguments{
\item{data}{A \code{data.frame} containing the following columns: \describe{
\item{Count}{Number of cases or deaths; this column must be named 'Count'.}
\item{Population}{Size of population at risk; this column must be named 'Population'.}
\item{time}{Time period indicator; provide the column name using the \code{time} argument.}
\item{group}{Optional grouping variable; provide the column name using the \code{group} argument.}
}}

\item{group}{If \code{data} is aggregated by demographic group, provide the (unquoted) name of the column in \code{data} containing the grouping structure, such as age brackets or race-ethnicity. E.g., if \code{data} has column names \code{Year}, \code{Race}, \code{Cases}, and \code{Population}, then you would provide \code{group = Race}.}

\item{time}{Specify the (unquoted) name of the time variable in \code{data}, as in \code{time = Year}. This variable must be numeric-alike (i.e., \code{as.numeric(data$time)} will not fail).}

\item{cor}{For correlated random walks use \code{cor = TRUE}; default value is \code{FALSE}. Note this only applies when the \code{group} argument is used.}

\item{prior}{Optionally provide a named \code{list} with prior parameters. If any of the following items are missing, default priors will be assigned and printed to the console.

\describe{
\item{eta_1}{The first value of log-risk in each series must be assigned a Student's t prior probability distribution. Provide the degrees of freedom (df), location, and scale parameters for each demographic group in a list, where each parameter is a \code{k}-length vector.

For example, with \code{k=2} demographic groups, the following code will assign priors of \code{student_t(10, -5, 5)} to the starting values of both series: \verb{prior = list(eta_1 = student_t(df = c(10, 10), location = c(-6.5, -6.5), scale = c(5, 5))}. Note, \code{eta} is the log-rate, so centering the prior for \code{eta_1} on \code{-5} is equivalent to centering the prior rate on \verb{exp(-6.5)*100,000 = 150} cases per 100,000 person-years at risk.}

\item{sigma}{Each demographic group has a scale parameter assigned to its log-rate. This is the scale of the annual deviations from the previous year's log-rate. The scale parameters are assigned independent half-Student's t prior distributions (these \code{half} t distributions are restricted to be positive-valued only).}

\item{omega}{If \code{cor = TRUE}, an LKJ prior is assigned to the correlation matrix, Omega.}
}}

\item{chains}{Number of independent MCMC chains to initiate (passed to \code{\link[rstan]{sampling}}).}

\item{cores}{The number of cores to use when executing the Markov chains in parallel (passed to \code{\link[rstan]{sampling}}).}

\item{iter}{Total number of MCMC iterations. Warmup draws are automatically half of \code{iter}.}

\item{refresh}{How often to refresh the MCMC sampling progress printed to the console.}

\item{control}{A named ‘list’ of parameters to control the Stan sampler's behavior. It defaults to ‘NULL’ so all the default values are used. See \code{\link[rstan]{stan}}. The most common parameters to control are \code{adapt_delta}, which may be raised to address divergent transitions, and \code{max_treedepth}. For example, \code{control = list(adapt_delta = 0.95, max_treedepth = 13)}, may be reasonable specifications.}

\item{...}{Other arguments passed to \code{\link[rstan]{sampling}}.}
}
\description{
Model time-varying disease risk given time series of case (or death) counts and population at risk.
}
\examples{
\dontrun{
   data(msa)
   dfw <- msa[grep("Dallas", msa$MSA), ]
   fit <- stan_rw(dfw, time = Year, group = Race)

print(fit)

# RStan summary
 head(fit$summary)

# default plot
 plot(fit)
}
}
\author{
Connor Donegan (Connor.Donegan@UTSouthwestern.edu)
}
